class Player {
    field int x, y;
    field boolean hasMug;

    constructor Player new()
    {
        let x = 0;
        let y = 0;
        let hasMug = false;
        return this;
    }

    method int returnX()
    {
        return x;
    }

    method int returnY()
    {
        return y;
    }
    
    method void move() 
    {
        var Mug mug;
        var Tips tips;
        var Dancer dancer;
        var int xTips, yTips;
        if (Keyboard.keyPressed() = 32)
        {
            let mug = Mug.new(x ,y);
        }
        if (Keyboard.keyPressed() = 130)
        { 
            let x = x - 2;
        }
        if (Keyboard.keyPressed() = 132)  
        { 
            let x = x + 2;
        }
        if (Keyboard.keyPressed() = 131)  
        { 
            let y = y + 2;
        }
        if (Keyboard.keyPressed() = 133)  
        { 
            let y = y - 2;
        }
        let xTips = tips.returnX();
        let yTips = tips.returnY();
        if (x = xTips){
            if (y = yTips){
            do tips.dispose();
            do dancer.dance();
            }} 
        return;
    }

    method void draw() {
        if (hasMug) {
            do Player.drawWithBeer(x); 
        } else {
            do Player.drawWithoutBeer(x);
        }
        return;
    }

    function void drawWithBeer(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 56);
	do Memory.poke(memAddress +32, 40);
	do Memory.poke(memAddress +64, 56);
	do Memory.poke(memAddress +96, 16);
	do Memory.poke(memAddress +128, 3640);
	do Memory.poke(memAddress +160, 4079);
	do Memory.poke(memAddress +192, 3640);
	do Memory.poke(memAddress +224, 40);
	do Memory.poke(memAddress +256, 68);
	do Memory.poke(memAddress +288, 130);
	return;
    }
    function void drawWithoutBeer(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 56);
	do Memory.poke(memAddress +32, 40);
	do Memory.poke(memAddress +64, 56);
	do Memory.poke(memAddress +96, 16);
	do Memory.poke(memAddress +128, 3640);
	do Memory.poke(memAddress +160, 3055);
	do Memory.poke(memAddress +192, 3640);
	do Memory.poke(memAddress +224, 40);
	do Memory.poke(memAddress +256, 68);
	do Memory.poke(memAddress +288, 130);
	return;
    }
}