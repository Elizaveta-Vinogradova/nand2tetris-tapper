class Player {
    static int x, y;
    static int level;
    static boolean hasMug;
    
    //22010 для нижней!!!!!! 18904 для верхней
    constructor Player new(int x, int y)
    {
        let x = x;
        let y = y;
        let level = 1;
        let hasMug = true;
        return this;
    }
    method int returnX()
    {
        return x;
    }
    method int returnY()
    {
        return y;
    }
    method int returnLevel()
    {
        return level;
    }
    method void move() 
    {
        var Mug mug;
        //var Tips tips;
        //var Dancer dancer;
        //var int xTips, yTips;
        if ((Keyboard.keyPressed() = 32) & (hasMug))
        {
            let mug = Mug.new(0,0);
            let hasMug = false;
        }
        else
        {
            if ((Keyboard.keyPressed() = 32) & (~hasMug))
            {
                let hasMug = true;
            }
        }
        if (Keyboard.keyPressed() = 133)  
        { 
            do Player.clear(5626);
            do Player.clear(2520);
            do Player.drawSPivom(5626);
            let level = 2;
        }
        if (Keyboard.keyPressed() = 131)  
        { 
            do Player.clear(5626);
            do Player.clear(2520);
            do Player.drawSPivom(2520);
            let level = 1;
        } 
        return;
    }

    function void draw() {
        return;
    }



    function void clear(int location) {
	var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +320, 0);
        do Memory.poke(memAddress +352, 0);
        do Memory.poke(memAddress +384, 0);
        do Memory.poke(memAddress +416, 0);
        do Memory.poke(memAddress +448, 0);
        do Memory.poke(memAddress +480, 0);
        do Memory.poke(memAddress +512, 0);
        do Memory.poke(memAddress +544, 0);
        do Memory.poke(memAddress +928, 0);
        do Memory.poke(memAddress +960, 0);
        do Memory.poke(memAddress +992, 0);
        // column 1
        do Memory.poke(memAddress +1, 0);
        do Memory.poke(memAddress +33, 0);
        do Memory.poke(memAddress +65, 0);
        do Memory.poke(memAddress +97, 0);
        do Memory.poke(memAddress +129, 0);
        do Memory.poke(memAddress +161, 0);
        do Memory.poke(memAddress +193, 0);
        do Memory.poke(memAddress +225, 0);
        do Memory.poke(memAddress +257, 0);
        do Memory.poke(memAddress +289, 0);
        do Memory.poke(memAddress +321, 0);
        do Memory.poke(memAddress +353, 0);
        do Memory.poke(memAddress +385, 0);
        do Memory.poke(memAddress +417, 0);
        do Memory.poke(memAddress +449, 0);
        do Memory.poke(memAddress +481, 0);
        do Memory.poke(memAddress +513, 0);
        do Memory.poke(memAddress +545, 0);
        do Memory.poke(memAddress +577, 0);
        do Memory.poke(memAddress +609, 0);
        do Memory.poke(memAddress +641, 0);
        do Memory.poke(memAddress +673, 0);
        do Memory.poke(memAddress +705, 0);
        do Memory.poke(memAddress +737, 0);
        do Memory.poke(memAddress +769, 0);
        do Memory.poke(memAddress +801, 0);
        do Memory.poke(memAddress +833, 0);
        do Memory.poke(memAddress +865, 0);
        do Memory.poke(memAddress +897, 0);
        do Memory.poke(memAddress +929, 0);
        do Memory.poke(memAddress +961, 0);
        do Memory.poke(memAddress +993, 0);
        // column 2
        do Memory.poke(memAddress +354, 0);
        do Memory.poke(memAddress +386, 0);
        do Memory.poke(memAddress +418, 0);
        do Memory.poke(memAddress +450, 0);
        do Memory.poke(memAddress +482, 0);
        do Memory.poke(memAddress +514, 0);
        do Memory.poke(memAddress +546, 0);
        do Memory.poke(memAddress +578, 0);
        do Memory.poke(memAddress +610, 0);
        do Memory.poke(memAddress +642, 0);
        do Memory.poke(memAddress +674, 0);
        do Memory.poke(memAddress +706, 0);
        do Memory.poke(memAddress +738, 0);
        do Memory.poke(memAddress +770, 0);
        do Memory.poke(memAddress +802, 0);
        do Memory.poke(memAddress +834, 0);
        do Memory.poke(memAddress +866, 0);
        do Memory.poke(memAddress +898, 0);
        do Memory.poke(memAddress +930, 0);
        do Memory.poke(memAddress +962, 0);
        do Memory.poke(memAddress +994, 0);
        return;
    }
    function void drawBezPiva(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +320, 16320);
        do Memory.poke(memAddress +352, 16320);
        do Memory.poke(memAddress +384, 12480);
        do Memory.poke(memAddress +416, -3904);
        do Memory.poke(memAddress +448, -3904);
        do Memory.poke(memAddress +480, -3904);
        do Memory.poke(memAddress +512, 16320);
        do Memory.poke(memAddress +544, 16320);
        do Memory.poke(memAddress +928, 0);
        do Memory.poke(memAddress +960, 0);
        do Memory.poke(memAddress +992, 0);
        // column 1
        do Memory.poke(memAddress +1, -16);
        do Memory.poke(memAddress +33, -16);
        do Memory.poke(memAddress +65, -16);
        do Memory.poke(memAddress +97, -8080);
        do Memory.poke(memAddress +129, -8080);
        do Memory.poke(memAddress +161, -8080);
        do Memory.poke(memAddress +193, -8080);
        do Memory.poke(memAddress +225, -16);
        do Memory.poke(memAddress +257, -16);
        do Memory.poke(memAddress +289, -16);
        do Memory.poke(memAddress +321, 3840);
        do Memory.poke(memAddress +353, -8);
        do Memory.poke(memAddress +385, -8);
        do Memory.poke(memAddress +417, -3841);
        do Memory.poke(memAddress +449, -3841);
        do Memory.poke(memAddress +481, -3841);
        do Memory.poke(memAddress +513, -3848);
        do Memory.poke(memAddress +545, -3848);
        do Memory.poke(memAddress +577, -8);
        do Memory.poke(memAddress +609, -8);
        do Memory.poke(memAddress +641, -8);
        do Memory.poke(memAddress +673, -8);
        do Memory.poke(memAddress +705, -8);
        do Memory.poke(memAddress +737, -3848);
        do Memory.poke(memAddress +769, -3848);
        do Memory.poke(memAddress +801, -3848);
        do Memory.poke(memAddress +833, -16324);
        do Memory.poke(memAddress +865, -16324);
        do Memory.poke(memAddress +897, -16324);
        do Memory.poke(memAddress +929, -32737);
        do Memory.poke(memAddress +961, -32737);
        do Memory.poke(memAddress +993, -32737);
        // column 2
        do Memory.poke(memAddress +354, 1);
        do Memory.poke(memAddress +386, 1);
        do Memory.poke(memAddress +418, 63);
        do Memory.poke(memAddress +450, 63);
        do Memory.poke(memAddress +482, 63);
        do Memory.poke(memAddress +514, 1);
        do Memory.poke(memAddress +546, 1);
        do Memory.poke(memAddress +578, 1);
        do Memory.poke(memAddress +610, 1);
        do Memory.poke(memAddress +642, 1);
        do Memory.poke(memAddress +674, 1);
        do Memory.poke(memAddress +706, 1);
        do Memory.poke(memAddress +738, 1);
        do Memory.poke(memAddress +770, 1);
        do Memory.poke(memAddress +802, 1);
        do Memory.poke(memAddress +834, 3);
        do Memory.poke(memAddress +866, 3);
        do Memory.poke(memAddress +898, 3);
        do Memory.poke(memAddress +930, 15);
        do Memory.poke(memAddress +962, 15);
        do Memory.poke(memAddress +994, 15);
        return;
    }   

    function void drawSPivom(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +320, 16320);
        do Memory.poke(memAddress +352, 16320);
        do Memory.poke(memAddress +384, 16320);
        do Memory.poke(memAddress +416, -64);
        do Memory.poke(memAddress +448, -64);
        do Memory.poke(memAddress +480, -64);
        do Memory.poke(memAddress +512, 16320);
        do Memory.poke(memAddress +544, 16320);
        do Memory.poke(memAddress +928, 0);
        do Memory.poke(memAddress +960, 0);
        do Memory.poke(memAddress +992, 0);
        // column 1
        do Memory.poke(memAddress +1, -16);
        do Memory.poke(memAddress +33, -16);
        do Memory.poke(memAddress +65, -16);
        do Memory.poke(memAddress +97, -8080);
        do Memory.poke(memAddress +129, -8080);
        do Memory.poke(memAddress +161, -8080);
        do Memory.poke(memAddress +193, -8080);
        do Memory.poke(memAddress +225, -16);
        do Memory.poke(memAddress +257, -16);
        do Memory.poke(memAddress +289, -16);
        do Memory.poke(memAddress +321, 3840);
        do Memory.poke(memAddress +353, -8);
        do Memory.poke(memAddress +385, -8);
        do Memory.poke(memAddress +417, -3841);
        do Memory.poke(memAddress +449, -3841);
        do Memory.poke(memAddress +481, -3841);
        do Memory.poke(memAddress +513, -3848);
        do Memory.poke(memAddress +545, -3848);
        do Memory.poke(memAddress +577, -8);
        do Memory.poke(memAddress +609, -8);
        do Memory.poke(memAddress +641, -8);
        do Memory.poke(memAddress +673, -8);
        do Memory.poke(memAddress +705, -8);
        do Memory.poke(memAddress +737, -3848);
        do Memory.poke(memAddress +769, -3848);
        do Memory.poke(memAddress +801, -3848);
        do Memory.poke(memAddress +833, -16324);
        do Memory.poke(memAddress +865, -16324);
        do Memory.poke(memAddress +897, -16324);
        do Memory.poke(memAddress +929, -32737);
        do Memory.poke(memAddress +961, -32737);
        do Memory.poke(memAddress +993, -32737);
        // column 2
        do Memory.poke(memAddress +354, 1);
        do Memory.poke(memAddress +386, 1);
        do Memory.poke(memAddress +418, 63);
        do Memory.poke(memAddress +450, 63);
        do Memory.poke(memAddress +482, 63);
        do Memory.poke(memAddress +514, 1);
        do Memory.poke(memAddress +546, 1);
        do Memory.poke(memAddress +578, 1);
        do Memory.poke(memAddress +610, 1);
        do Memory.poke(memAddress +642, 1);
        do Memory.poke(memAddress +674, 1);
        do Memory.poke(memAddress +706, 1);
        do Memory.poke(memAddress +738, 1);
        do Memory.poke(memAddress +770, 1);
        do Memory.poke(memAddress +802, 1);
        do Memory.poke(memAddress +834, 3);
        do Memory.poke(memAddress +866, 3);
        do Memory.poke(memAddress +898, 3);
        do Memory.poke(memAddress +930, 15);
        do Memory.poke(memAddress +962, 15);
        do Memory.poke(memAddress +994, 15);
        return;
    }
}